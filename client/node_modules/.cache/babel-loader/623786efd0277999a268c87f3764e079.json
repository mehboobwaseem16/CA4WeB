{"ast":null,"code":"import _toConsumableArray from\"/workspace/ca4webp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/workspace/ca4webp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Checkbox,Collapse}from'antd';var Panel=Collapse.Panel;function CheckBox(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),Checked=_useState2[0],setChecked=_useState2[1];var handleToggle=function handleToggle(value){var currentIndex=Checked.indexOf(value);var newChecked=_toConsumableArray(Checked);if(currentIndex===-1){newChecked.push(value);}else{newChecked.splice(currentIndex,1);}setChecked(newChecked);props.handleFilters(newChecked);//update this checked information into Parent Component \n};var renderCheckboxLists=function renderCheckboxLists(){return props.list&&props.list.map(function(value,index){return/*#__PURE__*/React.createElement(React.Fragment,{key:index},/*#__PURE__*/React.createElement(Checkbox,{onChange:function onChange(){return handleToggle(value._id);},type:\"checkbox\",checked:Checked.indexOf(value._id)===-1?false:true}),\"\\xA0\\xA0\",/*#__PURE__*/React.createElement(\"span\",null,value.name),\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Collapse,{defaultActiveKey:['0']},/*#__PURE__*/React.createElement(Panel,{header:\"Continents\",key:\"1\"},renderCheckboxLists())));}export default CheckBox;","map":{"version":3,"sources":["/workspace/ca4webp/client/src/components/views/LandingPage/Sections/CheckBox.js"],"names":["React","useState","Checkbox","Collapse","Panel","CheckBox","props","Checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleFilters","renderCheckboxLists","list","map","index","_id","name"],"mappings":"wSAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,QAAT,CAAmBC,QAAnB,KAAmC,MAAnC,C,GAEQC,CAAAA,K,CAAUD,Q,CAAVC,K,CAGR,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,eAESL,QAAQ,CAAC,EAAD,CAFjB,wCAEdM,OAFc,eAELC,UAFK,eAIrB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAE5B,GAAMC,CAAAA,YAAY,CAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB,CACA,GAAMG,CAAAA,UAAU,oBAAON,OAAP,CAAhB,CAEA,GAAII,YAAY,GAAK,CAAC,CAAtB,CAAyB,CACrBE,UAAU,CAACC,IAAX,CAAgBJ,KAAhB,EACH,CAFD,IAEO,CACHG,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,CAAgC,CAAhC,EACH,CAEDH,UAAU,CAACK,UAAD,CAAV,CACAP,KAAK,CAACU,aAAN,CAAoBH,UAApB,EACA;AAEH,CAfD,CAiBA,GAAMI,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,SAAMX,CAAAA,KAAK,CAACY,IAAN,EAAcZ,KAAK,CAACY,IAAN,CAAWC,GAAX,CAAe,SAACT,KAAD,CAAQU,KAAR,qBAC3D,oBAAC,KAAD,CAAO,QAAP,EAAgB,GAAG,CAAEA,KAArB,eACI,oBAAC,QAAD,EACI,QAAQ,CAAE,0BAAMX,CAAAA,YAAY,CAACC,KAAK,CAACW,GAAP,CAAlB,EADd,CAEI,IAAI,CAAC,UAFT,CAGI,OAAO,CAAEd,OAAO,CAACK,OAAR,CAAgBF,KAAK,CAACW,GAAtB,IAA+B,CAAC,CAAhC,CAAoC,KAApC,CAA4C,IAHzD,EADJ,yBAMI,gCAAOX,KAAK,CAACY,IAAb,CANJ,4CAD2D,EAAf,CAApB,EAA5B,CAWA,mBACI,4CACI,oBAAC,QAAD,EAAU,gBAAgB,CAAE,CAAC,GAAD,CAA5B,eACI,oBAAC,KAAD,EAAO,MAAM,CAAC,YAAd,CAA2B,GAAG,CAAC,GAA/B,EACKL,mBAAmB,EADxB,CADJ,CADJ,CADJ,CASH,CAED,cAAeZ,CAAAA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Checkbox, Collapse } from 'antd';\n\nconst { Panel } = Collapse\n\n\nfunction CheckBox(props) {\n\n    const [Checked, setChecked] = useState([])\n\n    const handleToggle = (value) => {\n\n        const currentIndex = Checked.indexOf(value);\n        const newChecked = [...Checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value)\n        } else {\n            newChecked.splice(currentIndex, 1)\n        }\n\n        setChecked(newChecked)\n        props.handleFilters(newChecked)\n        //update this checked information into Parent Component \n\n    }\n\n    const renderCheckboxLists = () => props.list && props.list.map((value, index) => (\n        <React.Fragment key={index}>\n            <Checkbox\n                onChange={() => handleToggle(value._id)}\n                type=\"checkbox\"\n                checked={Checked.indexOf(value._id) === -1 ? false : true}\n            />&nbsp;&nbsp;\n            <span>{value.name}</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        </React.Fragment>\n    ))\n\n    return (\n        <div>\n            <Collapse defaultActiveKey={['0']} >\n                <Panel header=\"Continents\" key=\"1\">\n                    {renderCheckboxLists()}\n                </Panel>\n            </Collapse>\n        </div>\n    )\n}\n\nexport default CheckBox\n"]},"metadata":{},"sourceType":"module"}