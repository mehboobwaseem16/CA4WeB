{"ast":null,"code":"var _jsxFileName = \"/workspace/ca4webp/client/src/components/views/CartPage/CartPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getCartItems, removeCartItem, onSuccessBuy } from '../../../_actions/user_actions';\nimport UserCardBlock from './Sections/UserCardBlock';\nimport { Result, Empty } from 'antd';\nimport Axios from 'axios';\nimport Paypal from '../../utils/Paypal';\n\nfunction CartPage(props) {\n  const dispatch = useDispatch();\n  const [Total, setTotal] = useState(0);\n  const [ShowTotal, setShowTotal] = useState(false);\n  const [ShowSuccess, setShowSuccess] = useState(false);\n  useEffect(() => {\n    let cartItems = [];\n\n    if (props.user.userData && props.user.userData.cart) {\n      if (props.user.userData.cart.length > 0) {\n        props.user.userData.cart.forEach(item => {\n          cartItems.push(item.id);\n        });\n        dispatch(getCartItems(cartItems, props.user.userData.cart)).then(response => {\n          if (response.payload.length > 0) {\n            calculateTotal(response.payload);\n          }\n        });\n      }\n    }\n  }, [props.user.userData]);\n\n  const calculateTotal = cartDetail => {\n    let total = 0;\n    cartDetail.map(item => {\n      total += parseInt(item.price, 10) * item.quantity;\n    });\n    setTotal(total);\n    setShowTotal(true);\n  };\n\n  const removeFromCart = productId => {\n    dispatch(removeCartItem(productId)).then(response => {\n      if (response.payload.cartDetail.length <= 0) {\n        setShowTotal(false);\n      } else {\n        calculateTotal(response.payload.cartDetail);\n      }\n    });\n  };\n\n  const transactionSuccess = data => {\n    dispatch(onSuccessBuy({\n      cartDetail: props.user.cartDetail,\n      paymentData: data\n    })).then(response => {\n      if (response.payload.success) {\n        setShowSuccess(true);\n        setShowTotal(false);\n      }\n    });\n  };\n\n  const transactionError = () => {\n    console.log('Paypal error');\n  };\n\n  const transactionCanceled = () => {\n    console.log('Transaction canceled');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '85%',\n      margin: '3rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"My Cart\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UserCardBlock, {\n    products: props.user.cartDetail,\n    removeItem: removeFromCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), ShowTotal ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"Total amount: $\", Total, \" \")) : ShowSuccess ? /*#__PURE__*/React.createElement(Result, {\n    status: \"success\",\n    title: \"Successfully Purchased Items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Empty, {\n    description: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, \"No Items In the Cart\"))), ShowTotal && /*#__PURE__*/React.createElement(Paypal, {\n    toPay: Total,\n    onSuccess: transactionSuccess,\n    transactionError: transactionError,\n    transactionCanceled: transactionCanceled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default CartPage;","map":{"version":3,"sources":["/workspace/ca4webp/client/src/components/views/CartPage/CartPage.js"],"names":["React","useEffect","useState","useDispatch","getCartItems","removeCartItem","onSuccessBuy","UserCardBlock","Result","Empty","Axios","Paypal","CartPage","props","dispatch","Total","setTotal","ShowTotal","setShowTotal","ShowSuccess","setShowSuccess","cartItems","user","userData","cart","length","forEach","item","push","id","then","response","payload","calculateTotal","cartDetail","total","map","parseInt","price","quantity","removeFromCart","productId","transactionSuccess","data","paymentData","success","transactionError","console","log","transactionCanceled","width","margin","marginTop","display","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport {\n    getCartItems,\n    removeCartItem,\n    onSuccessBuy\n} from '../../../_actions/user_actions';\nimport UserCardBlock from './Sections/UserCardBlock';\nimport { Result, Empty } from 'antd';\nimport Axios from 'axios';\nimport Paypal from '../../utils/Paypal';\nfunction CartPage(props) {\n    const dispatch = useDispatch();\n    const [Total, setTotal] = useState(0)\n    const [ShowTotal, setShowTotal] = useState(false)\n    const [ShowSuccess, setShowSuccess] = useState(false)\n\n    useEffect(() => {\n\n        let cartItems = [];\n        if (props.user.userData && props.user.userData.cart) {\n            if (props.user.userData.cart.length > 0) {\n                props.user.userData.cart.forEach(item => {\n                    cartItems.push(item.id)\n                });\n                dispatch(getCartItems(cartItems, props.user.userData.cart))\n                    .then((response) => {\n                        if (response.payload.length > 0) {\n                            calculateTotal(response.payload)\n                        }\n                    })\n            }\n        }\n\n    }, [props.user.userData])\n\n    const calculateTotal = (cartDetail) => {\n        let total = 0;\n\n        cartDetail.map(item => {\n            total += parseInt(item.price, 10) * item.quantity\n        });\n\n        setTotal(total)\n        setShowTotal(true)\n    }\n\n\n    const removeFromCart = (productId) => {\n\n        dispatch(removeCartItem(productId))\n            .then((response) => {\n                if (response.payload.cartDetail.length <= 0) {\n                    setShowTotal(false)\n                } else {\n                    calculateTotal(response.payload.cartDetail)\n                }\n            })\n    }\n\n    const transactionSuccess = (data) => {\n        dispatch(onSuccessBuy({\n            cartDetail: props.user.cartDetail,\n            paymentData: data\n        }))\n            .then(response => {\n                if (response.payload.success) {\n                    setShowSuccess(true)\n                    setShowTotal(false)\n                }\n            })\n    }\n\n    const transactionError = () => {\n        console.log('Paypal error')\n    }\n\n    const transactionCanceled = () => {\n        console.log('Transaction canceled')\n    }\n\n\n    return (\n        <div style={{ width: '85%', margin: '3rem auto' }}>\n            <h1>My Cart</h1>\n            <div>\n\n                <UserCardBlock\n                    products={props.user.cartDetail}\n                    removeItem={removeFromCart}\n                />\n\n\n                {ShowTotal ?\n                    <div style={{ marginTop: '3rem' }}>\n                        <h2>Total amount: ${Total} </h2>\n                    </div>\n                    :\n                    ShowSuccess ?\n                        <Result\n                            status=\"success\"\n                            title=\"Successfully Purchased Items\"\n                        /> :\n                        <div style={{\n                            width: '100%', display: 'flex', flexDirection: 'column',\n                            justifyContent: 'center'\n                        }}>\n                            <br />\n                            <Empty description={false} />\n                            <p>No Items In the Cart</p>\n\n                        </div>\n                }\n            </div>\n\n\n\n            {/* Paypal Button */}\n\n            {ShowTotal &&\n\n                <Paypal\n                    toPay={Total}\n                    onSuccess={transactionSuccess}\n                    transactionError={transactionError}\n                    transactionCanceled={transactionCanceled}\n                />\n\n            }\n\n\n\n        </div>\n    )\n}\n\nexport default CartPage\n"]},"metadata":{},"sourceType":"module"}