{"ast":null,"code":"// Author:Waseem Mehboob\n// ID: 18072\nimport axios from'axios';import{LOGIN_USER,REGISTER_USER,AUTH_USER,LOGOUT_USER,ADD_TO_CART_USER,GET_CART_ITEMS_USER,REMOVE_CART_ITEM_USER,ON_SUCCESS_BUY_USER}from'./types';import{USER_SERVER}from'../components/Config.js';export function registerUser(dataToSubmit){var request=axios.post(\"\".concat(USER_SERVER,\"/register\"),dataToSubmit).then(function(response){return response.data;});return{type:REGISTER_USER,payload:request};}export function loginUser(dataToSubmit){var request=axios.post(\"\".concat(USER_SERVER,\"/login\"),dataToSubmit).then(function(response){return response.data;});return{type:LOGIN_USER,payload:request};}export function auth(){var request=axios.get(\"\".concat(USER_SERVER,\"/auth\")).then(function(response){return response.data;});return{type:AUTH_USER,payload:request};}export function logoutUser(){var request=axios.get(\"\".concat(USER_SERVER,\"/logout\")).then(function(response){return response.data;});return{type:LOGOUT_USER,payload:request};}export function addToCart(_id){var request=axios.get(\"\".concat(USER_SERVER,\"/addToCart?productId=\").concat(_id)).then(function(response){return response.data;});return{type:ADD_TO_CART_USER,payload:request};}export function getCartItems(cartItems,userCart){var request=axios.get(\"/api/product/products_by_id?id=\".concat(cartItems,\"&type=array\")).then(function(response){//Make CartDetail inside Redux Store \n// We need to add quantity data to Product Information that come from Product Collection. \nuserCart.forEach(function(cartItem){response.data.forEach(function(productDetail,i){if(cartItem.id===productDetail._id){response.data[i].quantity=cartItem.quantity;}});});return response.data;});return{type:GET_CART_ITEMS_USER,payload:request};}export function removeCartItem(id){var request=axios.get(\"/api/users/removeFromCart?_id=\".concat(id)).then(function(response){response.data.cart.forEach(function(item){response.data.cartDetail.forEach(function(k,i){if(item.id===k._id){response.data.cartDetail[i].quantity=item.quantity;}});});return response.data;});return{type:REMOVE_CART_ITEM_USER,payload:request};}export function onSuccessBuy(data){var request=axios.post(\"\".concat(USER_SERVER,\"/successBuy\"),data).then(function(response){return response.data;});return{type:ON_SUCCESS_BUY_USER,payload:request};}","map":{"version":3,"sources":["/workspace/working-react/client/src/_actions/user_actions.js"],"names":["axios","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART_USER","GET_CART_ITEMS_USER","REMOVE_CART_ITEM_USER","ON_SUCCESS_BUY_USER","USER_SERVER","registerUser","dataToSubmit","request","post","then","response","data","type","payload","loginUser","auth","get","logoutUser","addToCart","_id","getCartItems","cartItems","userCart","forEach","cartItem","productDetail","i","id","quantity","removeCartItem","cart","item","cartDetail","k","onSuccessBuy"],"mappings":"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","sourcesContent":["// Author:Waseem Mehboob\n// ID: 18072\nimport axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART_USER,\n    GET_CART_ITEMS_USER,\n    REMOVE_CART_ITEM_USER,\n    ON_SUCCESS_BUY_USER\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit) {\n    const request = axios.post(`${USER_SERVER}/register`, dataToSubmit)\n        .then(response => response.data);\n\n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit) {\n    const request = axios.post(`${USER_SERVER}/login`, dataToSubmit)\n        .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth() {\n    const request = axios.get(`${USER_SERVER}/auth`)\n        .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser() {\n    const request = axios.get(`${USER_SERVER}/logout`)\n        .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n\nexport function addToCart(_id) {\n    const request = axios.get(`${USER_SERVER}/addToCart?productId=${_id}`)\n        .then(response => response.data);\n\n    return {\n        type: ADD_TO_CART_USER,\n        payload: request\n    }\n}\n\n\n\nexport function getCartItems(cartItems, userCart) {\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`)\n        .then(response => {\n\n\n            //Make CartDetail inside Redux Store \n            // We need to add quantity data to Product Information that come from Product Collection. \n\n            userCart.forEach(cartItem => {\n                response.data.forEach((productDetail, i) => {\n                    if (cartItem.id === productDetail._id) {\n                        response.data[i].quantity = cartItem.quantity;\n                    }\n                })\n            })\n\n            return response.data;\n        });\n\n    return {\n        type: GET_CART_ITEMS_USER,\n        payload: request\n    }\n}\n\n\n\n\nexport function removeCartItem(id) {\n    const request = axios.get(`/api/users/removeFromCart?_id=${id}`)\n        .then(response => {\n\n            response.data.cart.forEach(item => {\n                response.data.cartDetail.forEach((k, i) => {\n                    if (item.id === k._id) {\n                        response.data.cartDetail[i].quantity = item.quantity\n                    }\n                })\n            })\n            return response.data;\n        });\n\n    return {\n        type: REMOVE_CART_ITEM_USER,\n        payload: request\n    }\n}\n\n\nexport function onSuccessBuy(data) {\n\n    const request = axios.post(`${USER_SERVER}/successBuy`, data)\n        .then(response => response.data);\n\n    return {\n        type: ON_SUCCESS_BUY_USER,\n        payload: request\n    }\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}